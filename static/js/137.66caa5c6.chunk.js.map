{"version":3,"file":"static/js/137.66caa5c6.chunk.js","mappings":"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","sources":["redux/selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/MyBooks/ContactList/contactList.module.scss?3ce3","components/MyBooks/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/MyBooks/ContactFilter/contactFilter.module.scss?6b56","components/MyBooks/ContactFilter/ContactFilter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/MyBooks/ContactForm/contactForm.module.scss?4fc8","components/MyBooks/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/MyBooks/my-books.module.scss?b040","components/MyBooks/MyBooks.jsx","webpack://goit-react-hw-08-phonebook/./src/schare/Loader/loader.module.scss?58cc","schare/Loader/Loader.jsx"],"sourcesContent":["export const getAllContacts = store => store.contacts;\nexport const getFilter = store => store.filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"contactList_list__dc8nh\",\"item\":\"contactList_item__lRrWE\",\"contact\":\"contactList_contact__U7KYN\",\"btn\":\"contactList_btn__UaAt8\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\n\nimport { getFilter, getAllContacts } from 'redux/selectors';\n\nimport { fetchAllContacts, fetchDeleteContact } from 'redux/contactsOperations';\n\nimport Loader from 'schare/Loader/Loader';\n\nimport styles from './contactList.module.scss';\n\nconst ContactList = () => {\n  const { items, isLoading } = useSelector(getAllContacts);\n  const filter = useSelector(getFilter);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchAllContacts());\n  }, [dispatch]);\n\n  const handleDeleteContact = id => {\n    dispatch(fetchDeleteContact(id));\n  };\n\n  const getVisibleContacts = () => {\n    if (!filter) {\n      return items;\n    }\n    const normalizedFilter = filter.toLowerCase();\n    const result = items.filter(({ name, number }) => {\n      return (\n        name.toLowerCase().includes(normalizedFilter) ||\n        number.toLowerCase().includes(normalizedFilter)\n      );\n    });\n    return result;\n  };\n\n  const filtredContacts = getVisibleContacts();\n\n  const contacts = filtredContacts.map(({ name, number, id }) => (\n    <li className={styles.item} key={id}>\n      <p className={styles.contact}>\n        {name} .....tel. {number}\n      </p>\n      <button className={styles.btn} onClick={() => handleDeleteContact(id)}>\n        Delete\n      </button>\n    </li>\n  ));\n  return (\n    <ol className={styles.list}>\n      {isLoading && <Loader />}\n      {contacts}\n    </ol>\n  );\n};\n\nexport default ContactList;\n\nContactList.defaultProps = {\n  items: [],\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"formGroup\":\"contactFilter_formGroup__v2CBO\",\"inputStyle\":\"contactFilter_inputStyle__4j52A\"};","import { useSelector, useDispatch } from 'react-redux';\n\nimport { setFilter } from 'redux/filterSlice';\nimport { getFilter } from 'redux/selectors';\n\nimport styles from './contactFilter.module.scss';\n\nconst ContactFilter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const handleFilter = ({ target }) => dispatch(setFilter(target.value));\n\n  return (\n    <div className={styles.formGroup}>\n      <h4>Find</h4>\n      <input\n        className={styles.inputStyle}\n        name=\"filter\"\n        value={filter}\n        onChange={handleFilter}\n        placeholder=\"tel\"\n      />\n    </div>\n  );\n};\n\nexport default ContactFilter;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"contactForm_form__cVkIe\",\"formGroup\":\"contactForm_formGroup__QxBll\",\"inputName\":\"contactForm_inputName__3vzOF\",\"inputNumber\":\"contactForm_inputNumber__roZ1A\"};","import { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\n\nimport styles from './contactForm.module.scss';\n\nimport { fetchAllContacts, fetchAddContact } from 'redux/contactsOperations';\n\nconst ContactForm = () => {\n  let inputValues = {\n    name: '',\n    number: '',\n  };\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchAllContacts());\n  }, [dispatch]);\n\n  const handleChange = e => {\n    const objectKey = e.target.name;\n    inputValues[objectKey] = e.target.value;\n    console.log(objectKey);\n    return;\n  };\n\n  const handleAddContact = data => {\n    const name = data.name;\n    const number = data.number;\n    const action = fetchAddContact({ name, number });\n    dispatch(action);\n  };\n\n  const clearForm = e => {\n    e.target.elements.name.value = '';\n    e.target.elements.number.value = '';\n  };\n\n  return (\n    <form\n      className={styles.form}\n      onSubmit={e => {\n        e.preventDefault();\n        handleAddContact(inputValues);\n        clearForm(e);\n      }}\n    >\n      <div className={styles.formGroup}>\n        <label>Name</label>\n        <input\n          className={styles.inputName}\n          name=\"name\"\n          onChange={handleChange}\n          placeholder=\"Name\"\n          type=\"text\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </div>\n      <div className={styles.formGroup}>\n        <label>Number</label>\n        <input\n          className={styles.inputNumber}\n          name=\"number\"\n          onChange={handleChange}\n          placeholder=\"tel.number\"\n          type=\"tel\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </div>\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"my-books_wrapper__4bzIR\",\"block\":\"my-books_block__HddE2\",\"allContacts\":\"my-books_allContacts__zLc2E\",\"titleContacts\":\"my-books_titleContacts__u1whv\"};","import ContactList from './ContactList/ContactList';\nimport ContactFilter from './ContactFilter/ContactFilter';\nimport ContactForm from './ContactForm/ContactForm';\n\nimport styles from './my-books.module.scss';\n\nconst MyBooks = () => {\n  return (\n    <div>\n      <h3>Phonebook_kk</h3>\n      <div className={styles.wrapper}>\n        <div className={styles.block}>\n          <h4>Add new contact</h4>\n          <ContactForm />\n        </div>\n        <div className={styles.block}>\n          <h4 className={styles.titleContacts}>Contacts:</h4>\n          <ContactFilter />\n          <ContactList />\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default MyBooks;\n","// extracted by mini-css-extract-plugin\nexport default {\"ContainerLoader\":\"loader_ContainerLoader__wH0MG\"};","import { RotatingLines } from 'react-loader-spinner';\n\nimport styles from './loader.module.scss';\n\nconst Loader = () => {\n  return (\n    <div className={styles.ContainerLoader}>\n      <RotatingLines\n        strokeColor=\"#803fb5\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"50\"\n        visible={true}\n      />\n    </div>\n  );\n};\n\nexport default Loader;\n"],"names":["getAllContacts","store","contacts","getFilter","filter","ContactList","useSelector","items","isLoading","dispatch","useDispatch","useEffect","fetchAllContacts","normalizedFilter","toLowerCase","name","number","includes","getVisibleContacts","map","id","className","styles","onClick","fetchDeleteContact","handleDeleteContact","Loader","defaultProps","value","onChange","target","setFilter","placeholder","inputValues","handleChange","e","objectKey","console","log","onSubmit","preventDefault","data","action","fetchAddContact","handleAddContact","elements","clearForm","type","pattern","title","required","strokeColor","strokeWidth","animationDuration","width","visible"],"sourceRoot":""}
{"version":3,"file":"static/js/487.d35340c2.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/Pages/LoginPage/loginPage.module.scss?261e","components/LoginForm/initialState.js","components/LoginForm/fields.js","webpack://goit-react-hw-08-phonebook/./src/components/LoginForm/loginForm.module.scss?0f87","components/LoginForm/LoginForm.jsx","components/Pages/LoginPage/LoginPage.jsx","webpack://goit-react-hw-08-phonebook/./src/schare/Button/button.module.scss?711c","schare/Button/Button.jsx","schare/Hooks/useForm.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://goit-react-hw-08-phonebook/./src/schare/TextField/textField.module.scss?c9ee","schare/TextField/TextField.jsx","../node_modules/nanoid/index.browser.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loginPageBody\":\"loginPage_loginPageBody__-L2gJ\",\"loginPageImg\":\"loginPage_loginPageImg__Nvnys\"};","const initialState = {\n  email: '',\n  password: '',\n};\n\nexport default initialState;\n","const fields = {\n  email: {\n    type: 'email',\n    name: 'email',\n    required: true,\n    label: 'User email',\n    placeholder: 'User email',\n  },\n  password: {\n    type: 'password',\n    name: 'password',\n    required: true,\n    label: 'User password',\n    placeholder: 'User password',\n  },\n};\n\nexport default fields;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"loginForm_form__GQH2o\"};","import useForm from 'schare/Hooks/useForm';\n\nimport TextField from 'schare/TextField/TextField.jsx';\nimport Button from '../../schare/Button/Button';\n\nimport initialState from './initialState';\nimport fields from './fields';\n\nimport s from './loginForm.module.scss';\n\nconst LoginForm = ({ onSubmit }) => {\n  const { state, handleChange, handleSubmit } = useForm({\n    initialState,\n    onSubmit,\n  });\n  const { email, password } = state;\n  return (\n    <form onSubmit={handleSubmit} className={s.form}>\n      <TextField value={email} handleChange={handleChange} {...fields.email} />\n      <TextField\n        value={password}\n        handleChange={handleChange}\n        {...fields.password}\n      />\n      <Button>LOG IN</Button>\n    </form>\n  );\n};\n\nexport default LoginForm;\n","import { useDispatch } from 'react-redux';\n\nimport { login } from 'redux/auth/auth-operation';\n\nimport s from './loginPage.module.scss';\n\nimport LoginForm from 'components/LoginForm/LoginForm';\n\nconst LoginPage = () => {\n  const dispatch = useDispatch();\n\n  const handleLogin = data => {\n    dispatch(login(data));\n  };\n\n  return (\n    <div className={s.loginPageBody}>\n      <LoginForm onSubmit={handleLogin} />\n      <div className={s.loginPageImg}></div>\n    </div>\n  );\n};\n\nexport default LoginPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"ButtonContainer\":\"button_ButtonContainer__-KOnV\",\"Button\":\"button_Button__SyMah\"};","// import PropTypes from 'prop-types';\nimport styles from './button.module.scss';\n\nconst Btn = ({ children, type = 'submit' }) => {\n  return (\n    <div className={styles.ButtonContainer}>\n      <button type={type} className={styles.Button}>\n        {children}\n      </button>\n    </div>\n  );\n};\n\nexport default Btn;\n\n// Btn.propTypes = {\n//   onClick: PropTypes.func.isRequired,\n//   type: PropTypes.oneOf(['button', 'submit', 'reset']).isRequired,\n// };\n","import { useState, useCallback } from 'react';\n\nconst useForm = ({ initialState, onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = useCallback(\n    ({ target }) => {\n      const { name, value } = target;\n      setState(prevState => {\n        return { ...prevState, [name]: value };\n      });\n    },\n    [setState]\n  );\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n\n  return { state, setState, handleChange, handleSubmit };\n};\n\nexport default useForm;\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"textField_wrapper__ojxHv\",\"field\":\"textField_field__w9wVu\"};","import { useMemo } from 'react';\nimport { nanoid } from 'nanoid';\n\nimport s from './textField.module.scss';\n\nconst TextField = ({ label, handleChange, ...props }) => {\n  const id = useMemo(() => nanoid(), []);\n\n  return (\n    <div className={s.wrapper}>\n      <label htmlFor={id} className={s.label}>\n        {label}\n      </label>\n      <input className={s.field} id={id} onChange={handleChange} {...props} />\n    </div>\n  );\n};\n\nexport default TextField;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["email","password","type","name","required","label","placeholder","onSubmit","useForm","initialState","state","handleChange","handleSubmit","className","s","TextField","value","fields","Button","dispatch","useDispatch","data","login","children","styles","useState","setState","useCallback","target","prevState","e","preventDefault","_objectWithoutProperties","source","excluded","key","i","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","props","id","useMemo","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","nanoid","htmlFor","onChange"],"sourceRoot":""}